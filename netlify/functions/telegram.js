const token = process.env.TELEGRAM_BOT_TOKEN;;
const chats = [
	{ name: "–í–µ—Ä–∞", id: "728730912" },
];

export const handler = async (event) => {
	try {
		const data = JSON.parse(event.body);
		const { name, phone, message } = data;

		let respond = `–Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞!

‚Ä¢ –ò–º—è: ${name}
‚Ä¢ –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: ${phone}
‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–µ: ${message}`;

		const url = `https://api.telegram.org/bot${token}/sendMessage`;

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –í–°–ï–ú –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤ —Å–ø–∏—Å–∫–µ
		for (let { name, id } of chats) {
			//name = data.message.chat['first_name'] || name;


			await fetch(url, {
				method: "POST",
				headers: { "Content-Type": "application/json" },
				body: JSON.stringify({ chat_id: id, text: `üî• ${name}, ${respond}` }),
			});
		}

		return { statusCode: 200, body: "OK" }; // –¢–µ–ø–µ—Ä—å return —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ—Å–ª–µ –≤—Å–µ—Ö –æ—Ç–ø—Ä–∞–≤–æ–∫
	} catch (error) {
		return { statusCode: 500, body: error.toString() };
	}
};
