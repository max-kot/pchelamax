*,
*::before,
*::after {
	box-sizing: inherit;
}

a,
a:visited,
a:active {
	text-decoration: none;
}

html {
	box-sizing: border-box;
	font-size: var(--font-size);
	min-height: 100%;
}

input,
button {
	font: inherit;
	cursor: pointer;
}

img,
picture,
video,
svg,
source {
	max-width: 100%;
}

body {
	min-height: 100dvh;

	font-family: var(--main-font);
	font-size: 1.6rem;
	font-weight: 400;
	line-height: 1.2;
	color: var(--text);

	background: var(--bg);

	@media (max-width: em(600)) {
		font-size: 1.4rem;
	}
}

.no-scroll {
	overflow: hidden;
}

.wrapper {
	display: flex;
	flex-direction: column;
	position: relative;
	overflow: hidden;
	min-height: 100dvh;
}

.main {
	flex: 1 1 auto;
}

.container {
	max-width: calc(var(--container-width) + (var(--container-padding) * 2));
	padding: 0 var(--container-padding);
	margin: 0 auto;
	&--small {
		--container-width: 102rem;
	}
}

.btn {
	display: inline-flex;
	background: var(--dark);
	color: var(--bg);
	padding: 1.6rem 3.2rem;
	border-radius: 2.5rem;
	text-transform: uppercase;
	font-weight: 500;
	border: 0.4rem solid transparent;
	font-size: 1.8rem;
	transition: all 0.3s;
	box-shadow: var(--shadow);

	&:hover {
		background: var(--bg);
		color: var(--dark);
		border-color: currentColor;
	}
}

.section-title {
	@include reset;

	text-align: center;
	color: var(--dark);
	text-transform: uppercase;
	font-size: 4.2rem;
	line-height: 1.2;

	@media (max-width: em(1199)) {
		font-size: 3.8rem;
	}

	@media (max-width: em(1000)) {
		font-size: 3.4rem;
	}
	@media (max-width: em(799)) {
		font-size: 3rem;
	}
	@media (max-width: em(399)) {
		font-size: 2.4rem;
	}

	&:not(:last-child) {
		margin-bottom: 4rem;

		@media (max-width: em(1000)) {
			margin-bottom: 2rem;
		}
	}
}
.box {
	padding: 4rem 3rem;
	border-radius: 5rem;
	background: var(--secondary);
	box-shadow: var(--shadow);
	@media (max-width: em(799)) {
		border-radius: 3rem;
		padding: 3rem 2rem;
	}
}
.secondary-title {
	color: var(--dark);
	font-weight: 700;
	font-size: 1.8rem;
	text-transform: uppercase;
}
@keyframes slide {
	to {
		transform: translateX(calc(-100% - var(--slider-gap, 0)));
	}
}
